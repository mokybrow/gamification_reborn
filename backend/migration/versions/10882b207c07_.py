"""empty message

Revision ID: 10882b207c07
Revises:
Create Date: 2023-12-14 22:08:52.450681

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '10882b207c07'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_types',
    sa.Column('activity_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('activity_id')
    )
    op.create_table('age_ratings',
    sa.Column('age_rating_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_ru', sa.String(length=100), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('age_rating_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('g_tags',
    sa.Column('g_tag_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_ru', sa.String(length=100), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('g_tag_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('games',
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('cover', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('release', sa.DateTime(), nullable=True),
    sa.Column('playtime', sa.Integer(), nullable=True),
    sa.Column('platform_slug', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('platforms', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('parent_platform', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('genre', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('avg_rate', sa.Float(), nullable=True),
    sa.Column('completed_count', sa.Integer(), nullable=True),
    sa.Column('wishlist_count', sa.Integer(), nullable=True),
    sa.Column('favorite_count', sa.Integer(), nullable=True),
    sa.Column('esrb_rating', sa.String(), nullable=True),
    sa.Column('text_tsv', postgresql.TSVECTOR(), nullable=True),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_index(op.f('ix_games_game_id'), 'games', ['game_id'], unique=False)
    op.create_index(op.f('ix_games_slug'), 'games', ['slug'], unique=True)
    op.create_index('my_index', 'games', ['text_tsv'], unique=False, postgresql_using='gin')
    op.create_table('genres',
    sa.Column('genre_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_ru', sa.String(length=100), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('genre_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('like_types',
    sa.Column('type_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('platforms',
    sa.Column('platform_id', sa.UUID(), nullable=False),
    sa.Column('platform_name', sa.String(length=100), nullable=False),
    sa.Column('platform_slug', sa.String(length=100), nullable=False),
    sa.Column('platform_name_ru', sa.String(length=100), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('platform_id'),
    sa.UniqueConstraint('platform_name'),
    sa.UniqueConstraint('platform_slug')
    )
    op.create_table('tags',
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('tag_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('bio', sa.VARCHAR(length=255), nullable=True),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.Column('gender', sa.VARCHAR(length=255), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('is_writer', sa.Boolean(), nullable=True),
    sa.Column('official_person', sa.Boolean(), nullable=True),
    sa.Column('registration_date', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=True)
    op.create_table('wall_types',
    sa.Column('type_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('age_rating_games',
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('age_rating_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['age_rating_id'], ['age_ratings.age_rating_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE')
    )
    op.create_table('ban_list',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('report', sa.String(length=200), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('unbanned_day', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ban_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('comments',
    sa.Column('comment_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('parent_comment_id', sa.UUID(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.comment_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_table('friends',
    sa.Column('follower_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('added', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['follower_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE')
    )
    op.create_table('game_genres',
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('genre_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.genre_id'], ondelete='CASCADE'),
    sa.UniqueConstraint('game_id', 'genre_id', name='uix_2')
    )
    op.create_table('game_platforms',
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('platform_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.platform_id'], ondelete='CASCADE'),
    sa.UniqueConstraint('game_id', 'platform_id', name='uix_1')
    )
    op.create_table('game_reviews',
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_table('game_tags',
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('g_tag_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['g_tag_id'], ['g_tags.g_tag_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE')
    )
    op.create_table('like_log',
    sa.Column('like_id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['like_types.type_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('like_id')
    )
    op.create_table('user_games',
    sa.Column('action_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('activity_id', sa.UUID(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('user_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity_types.activity_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('action_id')
    )
    op.create_table('user_lists',
    sa.Column('list_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('about', sa.String(length=140), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('list_id')
    )
    op.create_table('user_notifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('general', sa.Boolean(), nullable=True),
    sa.Column('updates', sa.Boolean(), nullable=True),
    sa.Column('happy_birthday', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_settings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('app_theme', sa.Integer(), nullable=False),
    sa.Column('delete_request', sa.Boolean(), nullable=True),
    sa.Column('delete_day', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('walls',
    sa.Column('wall_id', sa.UUID(), nullable=False),
    sa.Column('type_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['wall_types.type_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('wall_id')
    )
    op.create_table('list_games',
    sa.Column('list_id', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('added', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['list_id'], ['user_lists.list_id'], ondelete='CASCADE')
    )
    op.create_table('posts',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('wall_id', sa.UUID(), nullable=True),
    sa.Column('parent_post_id', sa.UUID(), nullable=True),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['parent_post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wall_id'], ['walls.wall_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('post_pictures',
    sa.Column('picture_id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('picture_path', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('picture_id')
    )
    op.create_table('post_tags',
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('tag_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag_id'], ondelete='CASCADE')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_tags')
    op.drop_table('post_pictures')
    op.drop_table('posts')
    op.drop_table('list_games')
    op.drop_table('walls')
    op.drop_table('user_settings')
    op.drop_table('user_notifications')
    op.drop_table('user_lists')
    op.drop_table('user_games')
    op.drop_table('like_log')
    op.drop_table('game_tags')
    op.drop_table('game_reviews')
    op.drop_table('game_platforms')
    op.drop_table('game_genres')
    op.drop_table('friends')
    op.drop_table('comments')
    op.drop_table('ban_list')
    op.drop_table('age_rating_games')
    op.drop_table('wall_types')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('platforms')
    op.drop_table('like_types')
    op.drop_table('genres')
    op.drop_index('my_index', table_name='games', postgresql_using='gin')
    op.drop_index(op.f('ix_games_slug'), table_name='games')
    op.drop_index(op.f('ix_games_game_id'), table_name='games')
    op.drop_table('games')
    op.drop_table('g_tags')
    op.drop_table('age_ratings')
    op.drop_table('activity_types')
    # ### end Alembic commands ###
