[tool.poetry]
name = "mbrw"
version = "0.1.0"
description = ""
authors = ["Mikhail Panin <mokybrow@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["all"], version = "^0.103.1"}
sqlalchemy = {extras = ["all"], version = "^2.0.20"}
alembic = "^1.12.0"
asyncpg = "^0.28.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
isort = "^5.12.0"
black = "^23.9.1"
pillow = "^10.1.0"
pre-commit = "^3.5.0"
ruff = "^0.1.6"
requests = "^2.31.0"
aioredis = "^2.0.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
\.git
| \.mypy_cache
| \.pytest_cache
| \.venv
| \.vscode
| \.idea
)
'''

[tool.mypy]
python_version = 3.11
plugins = [
"pydantic.mypy"
]
ignore_missing_imports = true
follow_imports = "silent"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_reexport = true
exclude = [
'prometheus_data\.py',
'.venv/',
'venv/',
]


[tool.isort]
line_length = 120
force_grid_wrap = 0
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
lines_between_types = 1


[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.mccabe]
max-complexity = 20
