"""empty message

Revision ID: 2b4f20fad359
Revises: 134828042d65
Create Date: 2023-11-30 00:36:52.858999

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b4f20fad359'
down_revision: Union[str, None] = '134828042d65'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_types',
    sa.Column('activity_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('activity_id')
    )
    op.create_table('games',
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('cover', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('release', sa.DateTime(), nullable=True),
    sa.Column('playtime', sa.Integer(), nullable=True),
    sa.Column('platform', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('platform_name', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('parent_platform', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('genre', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('avg_rate', sa.Float(), nullable=True),
    sa.Column('completed_count', sa.Integer(), nullable=True),
    sa.Column('wishlist_count', sa.Integer(), nullable=True),
    sa.Column('favorite_count', sa.Integer(), nullable=True),
    sa.Column('esrb_rating', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_index(op.f('ix_games_game_id'), 'games', ['game_id'], unique=False)
    op.create_index(op.f('ix_games_slug'), 'games', ['slug'], unique=True)
    op.create_table('like_types',
    sa.Column('type_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('tags',
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('tag_id')
    )
    op.create_table('wall_types',
    sa.Column('type_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('ban_list',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('report', sa.String(length=200), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('unbanned_day', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ban_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('comments',
    sa.Column('comment_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('parent_comment_id', sa.UUID(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.comment_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_table('friends',
    sa.Column('follower_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('added', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['follower_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE')
    )
    op.create_table('game_reviews',
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_table('like_log',
    sa.Column('like_id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['like_types.type_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('like_id')
    )
    op.create_table('user_games',
    sa.Column('action_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('activity_id', sa.UUID(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity_types.activity_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('action_id')
    )
    op.create_table('user_lists',
    sa.Column('list_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('about', sa.String(length=140), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('list_id')
    )
    op.create_table('user_notifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('general', sa.Boolean(), nullable=True),
    sa.Column('updates', sa.Boolean(), nullable=True),
    sa.Column('happy_birthday', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_settings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('app_theme', sa.Integer(), nullable=False),
    sa.Column('delete_request', sa.Boolean(), nullable=True),
    sa.Column('delete_day', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('walls',
    sa.Column('wall_id', sa.UUID(), nullable=False),
    sa.Column('type_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['wall_types.type_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('wall_id')
    )
    op.create_table('list_games',
    sa.Column('list_id', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=True),
    sa.Column('added', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['list_id'], ['user_lists.list_id'], ondelete='CASCADE')
    )
    op.create_table('posts',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('wall_id', sa.UUID(), nullable=True),
    sa.Column('parent_post_id', sa.UUID(), nullable=True),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['parent_post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wall_id'], ['walls.wall_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('post_pictures',
    sa.Column('picture_id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('picture_path', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('picture_id')
    )
    op.create_table('post_tags',
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('tag_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag_id'], ondelete='CASCADE')
    )
    op.add_column('users', sa.Column('official_person', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'official_person')
    op.drop_table('post_tags')
    op.drop_table('post_pictures')
    op.drop_table('posts')
    op.drop_table('list_games')
    op.drop_table('walls')
    op.drop_table('user_settings')
    op.drop_table('user_notifications')
    op.drop_table('user_lists')
    op.drop_table('user_games')
    op.drop_table('like_log')
    op.drop_table('game_reviews')
    op.drop_table('friends')
    op.drop_table('comments')
    op.drop_table('ban_list')
    op.drop_table('wall_types')
    op.drop_table('tags')
    op.drop_table('like_types')
    op.drop_index(op.f('ix_games_slug'), table_name='games')
    op.drop_index(op.f('ix_games_game_id'), table_name='games')
    op.drop_table('games')
    op.drop_table('activity_types')
    # ### end Alembic commands ###
